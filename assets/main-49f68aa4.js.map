{"version":3,"file":"main-49f68aa4.js","sources":["../../src/js/Services/api.js","../../src/js/bestsellers.js","../../src/js/sidebarallcategories.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://books-backend.p.goit.global/books`;\n\nconst backendAPI = {\n  getCategoryList: async function () {\n    try {\n      const response = await axios.get(`/category-list`);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  getBestSellers: async function () {\n    try {\n      const response = await axios.get(`/top-books`);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  getSelectedCategory: async function (category) {\n    try {\n      const response = await axios.get(`/category?category=${category}`);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n\n  getBookDescription: async function (id) {\n    try {\n      const response = await axios.get(`/${id}`);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n};\n\nexport default backendAPI;\n","// import  backendAPI from \"./Services/api\";\n\n// const categoriesBooksList = document.querySelector('.categories-books-list');\n\n// const bestSellers = await backendAPI.getBestSellers();\n\n// function renderBooks(elements) {\n//     console.log(elements);\n//     const markup = elements.map(({ books, list_name }) => {\n//        return `<li class=\"categories-item\">${list_name}\n//         <ul class=\"categories-books-list\">\n//         ${books.map(({ book_image, title, author }) => {\n//             return `<li class=\"categories-item\">\n//              <img class=\"categories-img\" src='${book_image}' alt=\"\" />\n//              <h3 class=\"categories-book-title\">${title}</h3>\n//               <p class=\"categories-book-author\">${author}</p>\n//             </li>`}).join('\\n')}\n//             </ul >\n//             </li >\n//             <button class=\"categories-btn\" type=\"button\">See more</button>`\n//     }).join('\\n');\n    \n//     categoriesBooksList.insertAdjacentHTML('beforeend', markup);\n// }\n\n// renderBooks(bestSellers)\n\nimport backendAPI from \"./Services/api\";\n\nconst categoriesBooksList = document.querySelector('.categories-books-list');\n\nconst renderBooks = async () => {\n    try {\n        const bestSellersData = await backendAPI.getBestSellers();\n        const markup = bestSellersData.map(({ books, list_name }) => {\n            return `<li class=\"categories-item\">${list_name}\n                <ul class=\"categories-books-list\"> \n                    ${books.map(({ book_image, title, author }) => {\n                        return `<li class=\"categories-item\">\n                            <img class=\"categories-img\" src='${book_image}' alt=\"\" />\n                            <h3 class=\"categories-book-title\">${title}</h3>\n                            <p class=\"categories-book-author\">${author}</p>\n                        </li>`}).join('\\n')}\n                </ul>\n                <button class=\"categories-btn\" type=\"button\">See more</button>\n            </li>`;        \n        }).join('\\n');\n        \n        categoriesBooksList.insertAdjacentHTML('beforeend', markup);\n    } catch (error) {\n        console.error(\"Error fetching best sellers:\", error);\n    }\n}\n\nrenderBooks();","import backendAPI from './Services/api';\n\nconst categorySelectors = {\n  categoryContainer: document.querySelector('.category-container'),\n  categoryList: document.querySelector('.category-list'),\n  categoryItem: document.querySelector('.category-item'),\n  allCategory: document.querySelector('.all-category'),\n};\n\nfunction categoryMarkup(data) {\n  const result = data\n    .map(item => `<li class='category-item'>${item.list_name}</li>`)\n    .join('');\n  return result;\n}\n\n(async () => {\n  try {\n    const categoryData = await backendAPI.getCategoryList();\n    const markup = categoryMarkup(categoryData);\n    categorySelectors.categoryList.insertAdjacentHTML('beforeend', markup);\n  } catch (error) {\n    console.log(error);\n  }\n})();\n"],"names":["axios","backendAPI","error","category","id","categoriesBooksList","renderBooks","markup","books","list_name","book_image","title","author","categorySelectors","categoryMarkup","data","item","categoryData"],"mappings":"0uBAEAA,EAAM,SAAS,QAAU,4CAEzB,MAAMC,EAAa,CACjB,gBAAiB,gBAAkB,CACjC,GAAI,CAEF,OADiB,MAAMD,EAAM,IAAI,gBAAgB,GACjC,IACjB,OAAQE,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACF,EAED,eAAgB,gBAAkB,CAChC,GAAI,CAEF,OADiB,MAAMF,EAAM,IAAI,YAAY,GAC7B,IACjB,OAAQE,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACF,EAED,oBAAqB,eAAgBC,EAAU,CAC7C,GAAI,CAEF,OADiB,MAAMH,EAAM,IAAI,sBAAsBG,CAAQ,EAAE,GACjD,IACjB,OAAQD,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACF,EAED,mBAAoB,eAAgBE,EAAI,CACtC,GAAI,CAEF,OADiB,MAAMJ,EAAM,IAAI,IAAII,CAAE,EAAE,GACzB,IACjB,OAAQF,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACF,CACH,ECXMG,EAAsB,SAAS,cAAc,wBAAwB,EAErEC,EAAc,SAAY,CAC5B,GAAI,CAEA,MAAMC,GADkB,MAAMN,EAAW,kBACV,IAAI,CAAC,CAAE,MAAAO,EAAO,UAAAC,KAClC,+BAA+BA,CAAS;AAAA;AAAA,sBAErCD,EAAM,IAAI,CAAC,CAAE,WAAAE,EAAY,MAAAC,EAAO,OAAAC,KACvB;AAAA,+DACgCF,CAAU;AAAA,gEACTC,CAAK;AAAA,gEACLC,CAAM;AAAA,8BACvC,EAAE,KAAK;AAAA,CAAI,CAAC;AAAA;AAAA;AAAA,kBAIlC,EAAE,KAAK;AAAA,CAAI,EAEZP,EAAoB,mBAAmB,YAAaE,CAAM,CAC7D,OAAQL,EAAO,CACZ,QAAQ,MAAM,+BAAgCA,CAAK,CACtD,CACL,EAEAI,EAAa,ECpDb,MAAMO,EAAoB,CACxB,kBAAmB,SAAS,cAAc,qBAAqB,EAC/D,aAAc,SAAS,cAAc,gBAAgB,EACrD,aAAc,SAAS,cAAc,gBAAgB,EACrD,YAAa,SAAS,cAAc,eAAe,CACrD,EAEA,SAASC,EAAeC,EAAM,CAI5B,OAHeA,EACZ,IAAIC,GAAQ,6BAA6BA,EAAK,SAAS,OAAO,EAC9D,KAAK,EAAE,CAEZ,EAEC,SAAY,CACX,GAAI,CACF,MAAMC,EAAe,MAAMhB,EAAW,kBAChCM,EAASO,EAAeG,CAAY,EAC1CJ,EAAkB,aAAa,mBAAmB,YAAaN,CAAM,CACtE,OAAQL,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACH,GAAI"}